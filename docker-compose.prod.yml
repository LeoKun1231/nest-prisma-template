# Use root/example as user/password credentials
version: "3.8"

services:
  app:
    container_name: app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: production #指定构建阶段
      args:
        - APP_ENV
    env_file:
      - .env.production
    environment:
      - TZ=Asia/Shanghai
    ports:
      - 3000:3000
    depends_on:
      - mysql
      - redis
  mysql:
    image: mysql
    container_name: mysql
    restart: always
    privileged: true
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      TZ: Asia/Shanghai
      MYSQL_DATABASE: demo
    ports:
      - 3306:3306
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/conf:/etc/mysql/conf.d
      - ./docker/mysql/logs:/logs
    command:
      # 将mysql8.0默认密码策略 修改为 原先 策略 (mysql8.0对其默认策略做了更改 会导致密码无法匹配)
      # Modify the Mysql 8.0 default password strategy to the original strategy (MySQL8.0 to change its default strategy will cause the password to be unable to match)
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1

  redis:
    restart: always
    image: redis:7.2.4
    hostname: redis
    container_name: redis
    privileged: true
    ports:
      # 端口映射
      - 6379:6379
    volumes:
      - ./docker/redis/data:/data:rw
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - ./docker/redis/data/logs:/logs
    command: "redis-server /usr/local/etc/redis/redis.conf --requirepass 123456  --appendonly yes"
